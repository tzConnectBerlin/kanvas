steps:
  - name: gcr.io/cloud-builders/git
    args:
      - submodule
      - update
      - '--init'
      - '--recursive'
    id: Fetch submodules
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '-t'
      - >-
        ${_REPO_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA
      - '-f'
      - store-api-server/Dockerfile
      - .
    id: Build Image
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - >-
        ${_REPO_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA
    id: Push Image
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - deploy
      - '${_SERVICE_NAME}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--min-instances=${_MIN_INSTANCE}'
      - '--max-instances=${_MAX_INSTANCE}'
      - '--cpu=${_CPU}'
      - '--memory=${_MEMORY}'
      - '--service-account=${_SERVICE_ACCOUNT}'
      - '--vpc-egress=private-ranges-only'
      - '--vpc-connector=${_VPC_CONNECTOR}'
      - >-
        --image=${_REPO_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID
      - >-
        --set-secrets=PGHOST=PGHOST:latest,PGPASSWORD=PGPASSWORD:latest,PGPORT=PGPORT:latest,PGUSER=PGUSER:latest,PGDATABASE=PGDATABASE:latest,JWT_SECRET=STORE_JWT_SECRET:latest,AWS_S3_BUCKET=AWS_S3_BUCKET:latest,AWS_S3_ACCESS_KEY=AWS_S3_ACCESS_KEY:latest,AWS_S3_KEY_SECRET=AWS_S3_KEY_SECRET:latest,STRIPE_SECRET=STRIPE_SECRET:latest,STRIPE_WEBHOOK_SECRET=STRIPE_WEBHOOK_SECRET:latest,PINATA_API_KEY=PINATA_API_KEY:latest,PINATA_API_SECRET=PINATA_API_SECRET:latest,MINTER_TZ_ADDRESS=MINTER_TZ_ADDRESS:latest,ADMIN_PUBLIC_KEY=ADMIN_PUBLIC_KEY:latest,KANVAS_CONTRACT=KANVAS_CONTRACT:latest,API_KEY_SECRET=API_KEY_SECRET:latest,TEZPAY_PAYPOINT_ADDRESS=TEZPAY_PAYPOINT_ADDRESS:latest
      - >-
        --set-env-vars=KANVAS_API_PORT=${_KANVAS_API_PORT},NODE_TLS_REJECT_UNAUTHORIZED=0,JWT_EXPIRATION_TIME=86400000,CART_EXPIRATION_MILLI_SECS=1800000,ORDER_EXPIRATION_MILLI_SECS=3600000,BEHIND_PROXY=no,LOCAL_CORS=true,PROFILE_PICTURES_ENABLED=no,TEZOS_NETWORK=ghostnet,CACHE_TTL=5,CART_MAX_ITEMS=10,INIT_QUEPASA=false,BASE_CURRENCY=GBP
      - '--region=${_DEPLOY_REGION}'
      - '--quiet'
      - '--port=${_KANVAS_API_PORT}'
    id: Deploy to Cloud Run
    entrypoint: gcloud
options:
  machineType: E2_HIGHCPU_32
  dynamicSubstitutions: true
substitutions:
  _SERVICE_NAME: phase3-api
  _DEPLOY_REGION: europe-west2
  _MAX_INSTANCE: '10'
  _KANVAS_API_PORT: '3000'
  _VPC_CONNECTOR: central-serverless
  _CPU: '1'
  _REPO_REGION: europe-west2
  _MEMORY: 1Gi
  _SERVICE_ACCOUNT: cloud-run-sa@concordia-development.iam.gserviceaccount.com
  _MIN_INSTANCE: '1'
  _REPOSITORY: tznftwebshop
