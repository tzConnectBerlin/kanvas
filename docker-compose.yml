# Kanvas is a distributed system with multiple databases, servers, and web browser clients
# For development, we can spin everything up with a docker-compose setup

services:
  store-db:
    image: postgres:13
    command:
      - postgres
      - -c
      - wal_level=logical  # <- required for logical replication
    ports:
      - 54320:5432
    environment:
      POSTGRES_USER: store_pguser
      POSTGRES_PASSWORD: store_pgpass
      POSTGRES_DB: dev_database
    restart: on-failure

  store-api:
    build:
      context: .
      dockerfile: ./store-api-server/Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 3005:3000
    links:
      - store-db
      - store-quepasa
    environment:
      PGHOST: store-db
      PGPORT: 5432
      PGUSER: store_pguser
      PGPASSWORD: store_pgpass
      PGDATABASE: dev_database
      KANVAS_API_PORT: 3000
    env_file:
      - store-api-server/.env
    entrypoint: |-
      bash -c '
        set -e
        if [ "${STORE_API_ENABLED:-yes}" == "no" ]; then
          exit 0
        fi

        ./script/entrypoint
      '
    restart: on-failure

  store-front:
    build:
      context: .
      dockerfile: ./store-front/Dockerfile
    ports:
      - 3000:3000
    environment:
      REACT_APP_PORT: 3000
    env_file:
      - store-front/.env
    entrypoint: |-
      bash -c '
        set -e
        if [ "${STORE_FRONT_ENABLED:-yes}" == "no" ]; then
          exit 0
        fi

        yarn start:prod
      '
    restart: on-failure

  store-quepasa:
    image: ghcr.io/tzconnectberlin/que-pasa:1.2.6
    volumes:
      - ./config:/config
    environment:
      PGHOST: store-db
      PGPORT: 5432
      PGUSER: store_pguser
      PGPASSWORD: store_pgpass
      PGDATABASE: dev_database
      DATABASE_URL: "postgres://store_pguser:store_pgpass@store-db:5432/dev_database"
      CONTRACT_SETTINGS: /config/kanvas.yaml
    links:
      - store-db
    env_file:
      - config/.env-kanvas
    command:
      - --bcd-enable
    restart: on-failure

  peppermint:
    image: ghcr.io/tzconnectberlin/peppermint:1.2
    volumes:
      - ./config:/config
    links:
      - store-db
    entrypoint: |-
      bash -c '
        set -e
        psql -d "$$DATABASE_URL" < database/schema.sql

        if [ "${PEPPERMINT_ENABLED:-yes}" == "no" ]; then
          exit 0
        fi
        cp /config/peppermint.json config.json
        node app.mjs
      '
    environment:
      DATABASE_URL: "postgres://store_pguser:store_pgpass@store-db:5432/dev_database"
    restart: on-failure

  admin-db:
    image: postgres:13
    ports:
      - 54321:5432
    environment:
      POSTGRES_USER: admin_pguser
      POSTGRES_PASSWORD: admin_pgpass
      POSTGRES_DB: dev_database
    restart: on-failure

  admin-api:
    build:
      context: .
      dockerfile: ./admin-api-server/Dockerfile
    entrypoint: |-
      bash -c '
        set -e
        if [ "${ADMIN_API_ENABLED:-yes}" == "no" ]; then
          exit 0
        fi

        ./script/entrypoint
      '
    ports:
      - 3006:3001
    links:
      - admin-db
      - store-db
      - store-api
    env_file:
      - admin-api-server/.env
    environment:
      POSTGRES_USER: admin_pguser
      POSTGRES_PASSWORD: admin_pgpass
      POSTGRES_DB: dev_database

      PGHOST: admin-db
      PGPORT: 5432
      PGUSER: admin_pguser
      PGPASSWORD: admin_pgpass
      PGDATABASE: dev_database

      PGHOST_STORE_REPLICATION: store-db
      PGPORT_STORE_REPLICATION: 5432
      PGUSER_STORE_REPLICATION: store_pguser
      PGPASSWORD_STORE_REPLICATION: store_pgpass
      PGDATABASE_STORE_REPLICATION: dev_database

      ADMIN_API_PORT: 3001
      STORE_API: http://store-api:3000
    restart: on-failure

  admin-front:
    build:
      context: .
      dockerfile: ./admin-front/Dockerfile
      args:
        REACT_APP_API_SERVER_BASE_URL: http://localhost:3006
        REACT_APP_STORE_BASE_URL: http://localhost:3000
        REACT_APP_STORE_API_URL: http://localhost:3005
    ports:
      - 5050:80
    entrypoint: |-
      sh -c '
        set -e

        if [ "${STORE_FRONT_ENABLED:-yes}" == "no" ]; then
          exit 0
        fi

        nginx -g "daemon off;"
      '
    restart: on-failure
